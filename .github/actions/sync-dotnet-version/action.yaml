name: Sync CSPROJ Version
description: Synchronize a CSPROJ file with a version.txt file.
inputs:
  branch:
    required: true
  csproj-path:
    required: true
  version-file-path:
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Check if PR branch exists
      run: |
        git branch -a
        if git show-ref --quiet refs/heads/${{ env.PR_BRANCH }}; then
          echo "PR_BRANCH_EXISTS=true" >> $GITHUB_ENV
          echo "PR Branch exists: ${{ env.PR_BRANCH }}"
        else
          echo "PR Branch does not exist, skipping..."
        fi

    - name: Checkout PR Branch
      if: ${{ env.PR_BRANCH_EXISTS == 'true' }}
      run: git checkout ${{ inputs.branch }}
    # - uses: actions/checkout@v3
    #   with:
    #     ref: refs/heads/${{ inputs.branch }}

    - uses: actions/setup-node@v3
      if: ${{ env.PR_BRANCH_EXISTS == 'true' }}
      with:
        node-version: 18

    - name: Install dependencies
      if: ${{ env.PR_BRANCH_EXISTS == 'true' }}
      shell: bash
      run: cd $GITHUB_ACTION_PATH && npm ci

    - name: Sync version
      if: ${{ env.PR_BRANCH_EXISTS == 'true' }}
      shell: bash
      id: sync
      run: |
        cd $GITHUB_ACTION_PATH
        npx tsx sync-version.ts ${{ inputs.csproj-path }} ${{ inputs.version-file-path }} > sync_res.txt
        echo "result=$(< sync_res.txt)" >> $GITHUB_OUTPUT
        rm sync_res.txt

    - name: Set sync result
      if: ${{ env.PR_BRANCH_EXISTS == 'true' }}
      shell: bash
      run: |
        echo "${{ fromJSON(steps.sync.outputs.result).info }}"
        echo "FILE_UPDATED=${{ fromJSON(steps.sync.outputs.result).file_updated }}" >> $GITHUB_ENV
        echo "${{ toJSON(steps.sync.outputs.result) }}"

    - name: Setup git config
      if: ${{ env.FILE_UPDATED == 'true' && env.PR_BRANCH_EXISTS == 'true' }}
      shell: bash
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Commit changes
      if: ${{ env.FILE_UPDATED == 'true' && env.PR_BRANCH_EXISTS == 'true' }}
      shell: bash
      run: |
        git status
        git add .
        git commit -m "chore: Sync version.txt and .CSProj [skip ci]"
        git push origin ${{ inputs.branch }}
